## Multi-stage Dockerfile for apps/web (TanStack Start SSR on Railway)

FROM oven/bun:1.2.19 AS base
WORKDIR /app

# --- deps: install workspace deps with cache
FROM base AS deps
WORKDIR /app
COPY bun.lock package.json bunfig.toml turbo.json ./
COPY apps/web/package.json ./apps/web/package.json
RUN bun install --ci 

# --- build: SSR build with TanStack Start (node-server target)
FROM base AS build
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY --from=deps /app/apps/web/node_modules ./apps/web/node_modules
COPY apps/web ./apps/web

# Pass server URL at build time for import.meta.env.VITE_SERVER_URL if provided
ARG VITE_SERVER_URL
ENV VITE_SERVER_URL=${VITE_SERVER_URL}

WORKDIR /app/apps/web
RUN bun run build

# --- runtime: run SSR server output
FROM oven/bun:1.2.19 AS runner
WORKDIR /app/apps/web

ENV NODE_ENV=production
# Railway sets PORT automatically; default for local runs
ENV PORT=3000

# Copy SSR output (TanStack Start with target: "bun" outputs to .output/)
COPY --from=build /app/apps/web/.output ./

EXPOSE 3000

# Start the Bun SSR server (generated by TanStack Start)
CMD ["bun", "server/index.mjs"]

